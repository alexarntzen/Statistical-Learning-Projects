get_f_hat(data[indexs,])(sbp,sex)
}
)
}
boostrap_stats <- function(data,stat_func, num_samples ){
rows <- nrow(data)
boostrap_stats <- numeric(num_samples)
for (b in 1:num_samples){
indexs = sample.int(n =rows,size = rows,replace= TRUE)
boostrap_stats[b] <- stat_func(data,indexs)
}
return(boostrap_stats)
}
#chdProbability
probs <- boostrap_stats(d_chd,eval_f_hat(140,1),10)
bootProbs<-  boot(data = d_chd,statistic = eval_f_hat(140,1) , R = 100)
ggplot(data = data.frame(x=bootProbs$t),aes(x=x))+   geom_density()
library(dplyr)
library(boot)
eval_f_hat <- function(sbp,sex){
return(
function(data,indexs) {
get_f_hat(data[indexs,])(sbp,sex)
}
)
}
boostrap_stats <- function(data,stat_func, num_samples ){
rows <- nrow(data)
boostrap_stats <- numeric(num_samples)
for (b in 1:num_samples){
indexs = sample.int(n =rows,size = rows,replace= TRUE)
boostrap_stats[b] <- stat_func(data,indexs)
}
return(boostrap_stats)
}
#chdProbability
probs <- boostrap_stats(d_chd,eval_f_hat(140,1),10)
bootProbs<-  boot(data = d_chd,statistic = eval_f_hat(140,1) , R = 100)
ggplot(data = data.frame(x=bootProbs$t),aes(x=x))+   geom_density()
library(dplyr)
library(boot)
eval_f_hat <- function(sbp,sex){
return(
function(data,indexs) {
get_f_hat(data[indexs,])(sbp,sex)
}
)
}
boostrap_stats <- function(data,stat_func, num_samples ){
rows <- nrow(data)
boostrap_stats <- numeric(num_samples)
for (b in 1:num_samples){
indexs = sample.int(n =rows,size = rows,replace= TRUE)
boostrap_stats[b] <- stat_func(data,indexs)
}
return(boostrap_stats)
}
#chdProbability
probs <- boostrap_stats(d_chd,eval_f_hat(140,1),10)
bootProbs<-  boot(data = d_chd,statistic = eval_f_hat(140,1) , R = 100)
ggplot(data = data.frame(x=bootProbs$t),aes(x=x))+   geom_density()
library(dplyr)
library(boot)
eval_f_hat <- function(sbp,sex){
return(
function(data,indexs) {
get_f_hat(data[indexs,])(sbp,sex)
}
)
}
boostrap_stats <- function(data,stat_func, num_samples ){
rows <- nrow(data)
boostrap_stats <- numeric(num_samples)
for (b in 1:num_samples){
indexs = sample.int(n =rows,size = rows,replace= TRUE)
boostrap_stats[b] <- stat_func(data,indexs)
}
return(boostrap_stats)
}
#chdProbability
probs <- boostrap_stats(d_chd,eval_f_hat(140,1),10)
bootProbs<-  boot(data = d_chd,statistic = eval_f_hat(140,1) , R = 100)
ggplot(data = data.frame(x=bootProbs$t),aes(x=x))+   geom_density()
library(dplyr)
library(boot)
eval_f_hat <- function(sbp,sex){
return(
function(data,indexs) {
get_f_hat(data[indexs,])(sbp,sex)
}
)
}
boostrap_stats <- function(data,stat_func, num_samples ){
rows <- nrow(data)
boostrap_stats <- numeric(num_samples)
for (b in 1:num_samples){
indexs = sample.int(n =rows,size = rows,replace= TRUE)
boostrap_stats[b] <- stat_func(data,indexs)
}
return(boostrap_stats)
}
#chdProbability
probs <- boostrap_stats(d_chd,eval_f_hat(140,1),10)
bootProbs<-  boot(data = d_chd,statistic = eval_f_hat(140,1) , R = 100)
ggplot(data = data.frame(x=bootProbs$t),aes(x=x))+   geom_density()
library(dplyr)
library(boot)
eval_f_hat <- function(sbp,sex){
return(
function(data,indexs) {
get_f_hat(data[indexs,])(sbp,sex)
}
)
}
boostrap_stats <- function(data,stat_func, num_samples ){
rows <- nrow(data)
boostrap_stats <- numeric(num_samples)
for (b in 1:num_samples){
indexs = sample.int(n =rows,size = rows,replace= TRUE)
boostrap_stats[b] <- stat_func(data,indexs)
}
return(boostrap_stats)
}
#chdProbability
probs <- boostrap_stats(d_chd,eval_f_hat(140,1),1000)
bootProbs<-  boot(data = d_chd,statistic = eval_f_hat(140,1) , R = 1000)
ggplot(data = data.frame(x=bootProbs$t),aes(x=x))+   geom_density() + geom_density(data = data.frame(x=bootProbs$t),aes(x=x))
library(dplyr)
library(boot)
eval_f_hat <- function(sbp,sex){
return(
function(data,indexs) {
get_f_hat(data[indexs,])(sbp,sex)
}
)
}
boostrap_stats <- function(data,stat_func, num_samples ){
rows <- nrow(data)
boostrap_stats <- numeric(num_samples)
for (b in 1:num_samples){
indexs = sample.int(n =rows,size = rows,replace= TRUE)
boostrap_stats[b] <- stat_func(data,indexs)
}
return(boostrap_stats)
}
#chdProbability
probs <- boostrap_stats(d_chd,eval_f_hat(140,1),1000)
bootProbs<-  boot(data = d_chd,statistic = eval_f_hat(140,1) , R = 1000)
ggplot(data = data.frame(x=bootProbs$t),aes(x=x))+   geom_density() + geom_density(data = data.frame(x=bootProbs$t),aes(x=x), color = "red")
ggplot(data = data.frame(x=bootProbs$t),aes(x=x))+   geom_density() + geom_density(data = data.frame(x=probs),aes(x=x), color = "red")
probs <- boostrap_stats(d_chd,eval_f_hat(140,1),1000)
bootProbs<-  boot(data = d_chd,statistic = eval_f_hat(140,1) , R = 1000)
ggplot(data = data.frame(x=bootProbs$t),aes(x=x))+   geom_density() + geom_density(data = data.frame(x=probs),aes(x=x), color = "red")
probs <- boostrap_stats(d_chd,eval_f_hat(140,1),1000)
bootProbs<-  boot(data = d_chd,statistic = eval_f_hat(140,1) , R = 1000)
ggplot(data = data.frame(x=bootProbs$t),aes(x=x))+   geom_density() + geom_density(data = data.frame(x=probs),aes(x=x), color = "red")
probs <- boostrap_stats(d_chd,eval_f_hat(140,1),1000)
bootProbs<-  boot(data = d_chd,statistic = eval_f_hat(140,1) , R = 1000)
ggplot(data = data.frame(x=bootProbs$t),aes(x=x))+   geom_density() + geom_density(data = data.frame(x=probs),aes(x=x), color = "red")
# install.packages("knitr") #probably already installed
# install.packages("rmarkdown") #probably already installed
# install.packages("ggplot2") #plotting with ggplot
# install.packages("ggfortify")
# install.packages("MASS")
# install.packages("dplyr")
library(knitr)
library(rmarkdown)
library(ggplot2)
library(ggfortify)
library(MASS)
library(dplyr)
theme_set(theme_bw())
library(knitr)
knitr::opts_chunk$set(echo = TRUE,tidy=TRUE,message=FALSE,warning=FALSE,strip.white=TRUE,prompt=FALSE,
cache=TRUE, size="scriptsize",fig.width=4, fig.height=3)
# install.packages("knitr") #probably already installed
# install.packages("rmarkdown") #probably already installed
# install.packages("ggplot2") #plotting with ggplot
# install.packages("ggfortify")
# install.packages("MASS")
# install.packages("dplyr")
library(knitr)
library(rmarkdown)
library(ggplot2)
library(ggfortify)
library(MASS)
library(dplyr)
theme_set(theme_bw())
#id <- "1nLen1ckdnX4P9n8ShZeU7zbXpLc7qiwt" # google file ID
#d.worm <- read.csv(sprintf("https://docs.google.com/uc?id=%s&export=download", id))
#head(d.worm)
library(knitr)
knitr::opts_chunk$set(echo = TRUE,tidy=TRUE,message=FALSE,warning=FALSE,strip.white=TRUE,prompt=FALSE,
cache=TRUE, size="scriptsize",fig.width=4, fig.height=3)
# install.packages("knitr") #probably already installed
# install.packages("rmarkdown") #probably already installed
# install.packages("ggplot2") #plotting with ggplot
# install.packages("ggfortify")
# install.packages("MASS")
# install.packages("dplyr")
library(knitr)
library(rmarkdown)
library(ggplot2)
library(ggfortify)
library(MASS)
library(dplyr)
theme_set(theme_bw())
#id <- "1nLen1ckdnX4P9n8ShZeU7zbXpLc7qiwt" # google file ID
#d.worm <- read.csv(sprintf("https://docs.google.com/uc?id=%s&export=download", id))
#head(d.worm)
ggplot(data = data.frame(x=bootProbs$t),aes(x=x))+   geom_density() + geom_density(data = data.frame(x=probs),aes(x=x), color = "red")
chdProbability
library(dplyr)
library(boot)
eval_f_hat <- function(sbp,sex){
return(
function(data,indexs) {
get_f_hat(data[indexs,])(sbp,sex)
}
)
}
boostrap_stats <- function(data,stat_func, num_samples ){
rows <- nrow(data)
boostrap_stats <- numeric(num_samples)
for (b in 1:num_samples){
indexs = sample.int(n =rows,size = rows,replace= TRUE)
boostrap_stats[b] <- stat_func(data,indexs)
}
return(boostrap_stats)
}
probs <- boostrap_stats(d_chd,eval_f_hat(140,1),1000)
bootProbs<-  boot(data = d_chd,statistic = eval_f_hat(140,1) , R = 1000)
sd(probs)
ggplot(data = data.frame(x=bootProbs$t),aes(x=x))+   geom_density() + geom_density(data = data.frame(x=probs),aes(x=x), color = "red")
#Confidence interval
(probs)
sd(probs)
library(Rfast)
install.packages(Rfast)
install.packages("Rfast")
library(dplyr)
library(boot)
eval_f_hat <- function(sbp,sex){
return(
function(data,indexs) {
get_f_hat(data[indexs,])(sbp,sex)
}
)
}
boostrap_stats <- function(data,stat_func, num_samples ){
rows <- nrow(data)
boostrap_stats <- numeric(num_samples)
for (b in 1:num_samples){
indexs = sample.int(n =rows,size = rows,replace= TRUE)
boostrap_stats[b] <- stat_func(data,indexs)
}
return(boostrap_stats)
}
probs <- boostrap_stats(d_chd,eval_f_hat(140,1),1000)
bootProbs<-  boot(data = d_chd,statistic = eval_f_hat(140,1) , R = 1000)
sd(probs)
ggplot(data = data.frame(x=bootProbs$t),aes(x=x))+   geom_density() + geom_density(data = data.frame(x=probs),aes(x=x), color = "red")
#Confidence interval
#Removing top 1000*(1-a/2) from each end
a = Rfast::nth(probs, 51, descending = TRUE)
a = Rfast::nth(probs, 51, descending = TRUE)
library("Rfast")
install.packages("Rfast")
install.packages(Rfast)
install.packages("Rfast")
sudo install.packages("Rfast")
library(Rfast)
library(Rfast)
library("Rfast")
library("Rfast")
install.packages("Rfast")
install.packages("Rfast")
install.packages("Rfast2")
install.packages(c("boot", "foreign", "knitr", "mime", "nlme", "processx"))
install.packages(c("boot", "foreign", "knitr", "mime", "nlme", "processx"))
library(knitr)
knitr::opts_chunk$set(echo = TRUE,tidy=TRUE,message=FALSE,warning=FALSE,strip.white=TRUE,prompt=FALSE,
cache=TRUE, size="scriptsize",fig.width=4, fig.height=3)
b = nth(probs, 51, descending = FALSE)
install.packages("Rfast")
q()
library(knitr)
knitr::opts_chunk$set(echo = TRUE,tidy=TRUE,message=FALSE,warning=FALSE,strip.white=TRUE,prompt=FALSE,
cache=TRUE, size="scriptsize",fig.width=4, fig.height=3)
install.packages("Rfast")
library("Rfast")
install.packages("Rfast")
install.packages("Rfast")
q()
library(knitr)
knitr::opts_chunk$set(echo = TRUE,tidy=TRUE,message=FALSE,warning=FALSE,strip.white=TRUE,prompt=FALSE,
cache=TRUE, size="scriptsize",fig.width=4, fig.height=3)
library(Rfast)
library(dplyr)
library(boot)
eval_f_hat <- function(sbp,sex){
return(
function(data,indexs) {
get_f_hat(data[indexs,])(sbp,sex)
}
)
}
boostrap_stats <- function(data,stat_func, num_samples ){
rows <- nrow(data)
boostrap_stats <- numeric(num_samples)
for (b in 1:num_samples){
indexs = sample.int(n =rows,size = rows,replace= TRUE)
boostrap_stats[b] <- stat_func(data,indexs)
}
return(boostrap_stats)
}
probs <- boostrap_stats(d_chd,eval_f_hat(140,1),1000)
id <- "1I6dk1fA4ujBjZPo3Xj8pIfnzIa94WKcy" # google file ID
d_chd <- read.csv(sprintf("https://docs.google.com/uc?id=%s&export=download",
id))
get_f_hat <- function(chd_data){
logitRegChd <- glm(chd~sbp+sex, data=chd_data, family="binomial")
b <- coef(logitRegChd)[1]
bSpb <- coef(logitRegChd)[2]
bSex <- coef(logitRegChd)[3]
return(function(spb,sex) {
return (exp(b+bSpb*spb + bSex*sex)/(1+exp(b+bSpb*spb + bSex*sex)))
})
}
f_hat <- get_f_hat(d_chd)
chdProbability <- unname(f_hat(140,1))
testPlotFemale <- ggplot(subset(d_chd, sex == 0), aes(x=subset(sbp, sex == 0), y=subset(chd, sex == 0)))+geom_point() + geom_line(aes(x=sbp, y=f_hat(sbp,1)), col="blue")
library(knitr)
knitr::opts_chunk$set(echo = TRUE,tidy=TRUE,message=FALSE,warning=FALSE,strip.white=TRUE,prompt=FALSE,
cache=TRUE, size="scriptsize",fig.width=4, fig.height=3)
# install.packages("knitr") #probably already installed
# install.packages("rmarkdown") #probably already installed
# install.packages("ggplot2") #plotting with ggplot
# install.packages("ggfortify")
# install.packages("MASS")
# install.packages("dplyr")
library(knitr)
library(rmarkdown)
library(ggplot2)
library(ggfortify)
library(MASS)
library(dplyr)
library(boot)
library(Rfast)
theme_set(theme_bw())
#id <- "1nLen1ckdnX4P9n8ShZeU7zbXpLc7qiwt" # google file ID
#d.worm <- read.csv(sprintf("https://docs.google.com/uc?id=%s&export=download", id))
#head(d.worm)
library(knitr)
knitr::opts_chunk$set(echo = TRUE,tidy=TRUE,message=FALSE,warning=FALSE,strip.white=TRUE,prompt=FALSE,
cache=TRUE, size="scriptsize",fig.width=4, fig.height=3)
# install.packages("knitr") #probably already installed
# install.packages("rmarkdown") #probably already installed
# install.packages("ggplot2") #plotting with ggplot
# install.packages("ggfortify")
# install.packages("MASS")
# install.packages("dplyr")
library(knitr)
library(rmarkdown)
library(ggplot2)
library(ggfortify)
library(MASS)
library(dplyr)
library(boot)
library(Rfast)
theme_set(theme_bw())
#id <- "1nLen1ckdnX4P9n8ShZeU7zbXpLc7qiwt" # google file ID
#d.worm <- read.csv(sprintf("https://docs.google.com/uc?id=%s&export=download", id))
#head(d.worm)
library(knitr)
knitr::opts_chunk$set(echo = TRUE,tidy=TRUE,message=FALSE,warning=FALSE,strip.white=TRUE,prompt=FALSE,
cache=TRUE, size="scriptsize",fig.width=4, fig.height=3)
# install.packages("knitr") #probably already installed
# install.packages("rmarkdown") #probably already installed
# install.packages("ggplot2") #plotting with ggplot
# install.packages("ggfortify")
# install.packages("MASS")
# install.packages("dplyr")
library(knitr)
library(rmarkdown)
library(ggplot2)
library(ggfortify)
library(MASS)
library(dplyr)
library(boot)
library(Rfast)
theme_set(theme_bw())
#id <- "1nLen1ckdnX4P9n8ShZeU7zbXpLc7qiwt" # google file ID
#d.worm <- read.csv(sprintf("https://docs.google.com/uc?id=%s&export=download", id))
#head(d.worm)
library(knitr)
knitr::opts_chunk$set(echo = TRUE,tidy=TRUE,message=FALSE,warning=FALSE,strip.white=TRUE,prompt=FALSE,
cache=TRUE, size="scriptsize",fig.width=4, fig.height=3)
# install.packages("knitr") #probably already installed
# install.packages("rmarkdown") #probably already installed
# install.packages("ggplot2") #plotting with ggplot
# install.packages("ggfortify")
# install.packages("MASS")
# install.packages("dplyr")
library(knitr)
library(rmarkdown)
library(ggplot2)
library(ggfortify)
library(MASS)
library(dplyr)
library(boot)
library(Rfast)
theme_set(theme_bw())
#id <- "1nLen1ckdnX4P9n8ShZeU7zbXpLc7qiwt" # google file ID
#d.worm <- read.csv(sprintf("https://docs.google.com/uc?id=%s&export=download", id))
#head(d.worm)
library(boot)
# install.packages("knitr") #probably already installed
# install.packages("rmarkdown") #probably already installed
# install.packages("ggplot2") #plotting with ggplot
# install.packages("ggfortify")
# install.packages("MASS")
# install.packages("dplyr")
library(knitr)
library(rmarkdown)
library(ggplot2)
library(ggfortify)
library(MASS)
library(dplyr)
library(boot)
library(Rfast)
theme_set(theme_bw())
id <- "1I6dk1fA4ujBjZPo3Xj8pIfnzIa94WKcy" # google file ID
d_chd <- read.csv(sprintf("https://docs.google.com/uc?id=%s&export=download",
id))
get_f_hat <- function(chd_data){
logitRegChd <- glm(chd~sbp+sex, data=chd_data, family="binomial")
b <- coef(logitRegChd)[1]
bSpb <- coef(logitRegChd)[2]
bSex <- coef(logitRegChd)[3]
return(function(spb,sex) {
return (exp(b+bSpb*spb + bSex*sex)/(1+exp(b+bSpb*spb + bSex*sex)))
})
}
f_hat <- get_f_hat(d_chd)
chdProbability <- unname(f_hat(140,1))
testPlotFemale <- ggplot(subset(d_chd, sex == 0), aes(x=subset(sbp, sex == 0), y=subset(chd, sex == 0)))+geom_point() + geom_line(aes(x=sbp, y=f_hat(sbp,1)), col="blue")
testPlotMale <- ggplot(subset(d_chd, sex == 1), aes(x=subset(sbp, sex == 1), y=subset(chd, sex == 1)))+geom_point() + geom_line(aes(x=sbp, y=f_hat(sbp,2)), col="blue")
testPlotFemale
testPlotMale
library(dplyr)
library(boot)
eval_f_hat <- function(sbp,sex){
return(
function(data,indexs) {
get_f_hat(data[indexs,])(sbp,sex)
}
)
}
boostrap_stats <- function(data,stat_func, num_samples ){
rows <- nrow(data)
boostrap_stats <- numeric(num_samples)
for (b in 1:num_samples){
indexs = sample.int(n =rows,size = rows,replace= TRUE)
boostrap_stats[b] <- stat_func(data,indexs)
}
return(boostrap_stats)
}
probs <- boostrap_stats(d_chd,eval_f_hat(140,1),1000)
bootProbs<-  boot(data = d_chd,statistic = eval_f_hat(140,1) , R = 1000)
sd(probs)
ggplot(data = data.frame(x=bootProbs$t),aes(x=x))+   geom_density() + geom_density(data = data.frame(x=probs),aes(x=x), color = "red")
#Confidence interval
#Removing top 1000*(1-a/2) from each end
low = nth(probs, 26, descending = TRUE)
high = Rfast::nth(probs, 26, descending = FALSE)
low = Rfast::nth(probs, 26, descending = TRUE)
high = Rfast::nth(probs, 26, descending = FALSE)
low
high
library(dplyr)
library(boot)
eval_f_hat <- function(sbp,sex){
return(
function(data,indexs) {
get_f_hat(data[indexs,])(sbp,sex)
}
)
}
boostrap_stats <- function(data,stat_func, num_samples ){
rows <- nrow(data)
boostrap_stats <- numeric(num_samples)
for (b in 1:num_samples){
indexs = sample.int(n =rows,size = rows,replace= TRUE)
boostrap_stats[b] <- stat_func(data,indexs)
}
return(boostrap_stats)
}
probs <- boostrap_stats(d_chd,eval_f_hat(140,1),1000)
bootProbs<-  boot(data = d_chd,statistic = eval_f_hat(140,1) , R = 1000)
sd(probs)
ggplot(data = data.frame(x=bootProbs$t),aes(x=x))+   geom_density() + geom_density(data = data.frame(x=probs),aes(x=x), color = "red")
#Confidence interval
#Removing top 1000*(1-a/2) from each end
low = Rfast::nth(probs, 26, descending = FALSE)
high = Rfast::nth(probs, 26, descending = TRUE)
stdError´. $95\%$ confindence interval for the the estimator of $P(\mathrm{chd} | \mathrm{sex= male},\mathrm{sbp=40})$ is [
stdError = sd(probs)
stdError´. $95\%$ confindence interval for the the estimator of $P(\mathrm{chd} | \mathrm{sex= male},\mathrm{sbp=40})$ is [
stdError´. $95\%$ confindence interval for the the estimator of $P(\mathrm{chd} | \mathrm{sex= male},\mathrm{sbp=40})$ is [
```{r, eval=FALSE, echo=TRUE}
stdError
